name: Data maker

on:
  push:
    branches:
      - main

  workflow_dispatch:

  schedule:
    - cron: '30 22 * * *'
  
jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
    - name: Check-out this repo
      uses: actions/checkout@v2
    - name: Check website accessibilty
      run: |
        wget https://app2.controlenamao.com.br
        cat index.html
        rm index.html
    - name: Remove Chrome
      run: sudo apt purge google-chrome-stable
      
    - name: Remove default Chromium
      run: sudo apt purge chromium-browser
      
    - name: Install a new Chromium
      run: sudo apt install -y chromium-browser

    - name: Check Chromium present
      run: |
        which chromium-browser
        which chromium
    
    - name: Prepare environment
      run: |
        echo "Checking for old files"
        ls -a -l
        echo "Installing python libraries"
        python3 -m pip install selenium webdriver-manager dropbox pathlib pandas xlrd glob

    - name: Run scrapper
      run: |
        echo "Running script"
        python3 scripts/scrapper.py ${{ secrets.APP_USER }} ${{ secrets.APP_PASS}} --debug

    - name: Check downloaded files
      if: always()
      run: ls -a -l

    - name: Rename files
      run: |
       mv Relatorio_venda.xls Relatorio_$(date '+%Y_%m').xls
       mv Relatorio_Estoque.xls Relatorio_Estoque_$(date '+%Y%m').xls
       ls -a -l

    - name: Create artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: Reports
        path: '*.xls'
        retention-days: 7

    - name: Upload reports
      run: python3 scripts/upload_files.py ${{ secrets.DBX_APP_KEY }} ${{ secrets.DBX_APP_SECRET}} ${{ secrets.DBX_REFRESH_TOKEN }}

    - name: Download all data
      run: |
        python3 scripts/download_files.py ${{ secrets.DBX_APP_KEY }} ${{ secrets.DBX_APP_SECRET}} ${{ secrets.DBX_REFRESH_TOKEN }}
        ls -a -l

    - name: Prepare data
      run: |
        ls -a -l
        unzip Vendas.zip
        unzip EstoqueDetalhado.zip
        python3 scripts/data_joiner.py
        
    - name: Check produced files
      run: |
        ls -a -l
        
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        echo "Checking for status"
        git status
        git add data/sales.csv
        git add data/inventory.csv
        git add data/inventory_demand.csv
        echo "Checking for status after adding files"
        git status
        git commit -m "Update data"
       
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch:  'main'
        force:  true 
        github_token: ${{ secrets.GITHUB_TOKEN }}
